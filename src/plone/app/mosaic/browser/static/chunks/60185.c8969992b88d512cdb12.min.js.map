{"version":3,"file":"chunks/60185.c8969992b88d512cdb12.min.js","mappings":"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","sources":["webpack://plone-mosaic/./resources/js/mosaic.layout.js"],"sourcesContent":["// This plugin is used to create a mosaic layout.\nimport \"regenerator-runtime/runtime\"; // needed for ``await`` support\nimport $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport Tile from \"./mosaic.tile\";\n\nconst log = logging.getLogger(\"pat-mosaic/layout\");\n\nexport default class LayoutManager {\n    constructor(mosaic) {\n        this.mosaic = mosaic;\n    }\n\n    layout = {\n        widthClasses: [\n            \"col\",\n            \"col-1\",\n            \"col-2\",\n            \"col-3\",\n            \"col-4\",\n            \"col-5\",\n            \"col-6\",\n            \"col-7\",\n            \"col-8\",\n            \"col-9\",\n            \"col-10\",\n            \"col-11\",\n            \"col-12\",\n        ],\n        resizeClasses: [\n            \"mosaic-resize-1\",\n            \"mosaic-resize-2\",\n            \"mosaic-resize-3\",\n            \"mosaic-resize-4\",\n            \"mosaic-resize-5\",\n            \"mosaic-resize-6\",\n            \"mosaic-resize-7\",\n            \"mosaic-resize-8\",\n            \"mosaic-resize-9\",\n            \"mosaic-resize-10\",\n            \"mosaic-resize-11\",\n            \"mosaic-resize-12\",\n        ],\n        resizeHandleClasses: [\n            \"mosaic-resize-handle-1\",\n            \"mosaic-resize-handle-2\",\n            \"mosaic-resize-handle-3\",\n            \"mosaic-resize-handle-4\",\n            \"mosaic-resize-handle-5\",\n            \"mosaic-resize-handle-6\",\n            \"mosaic-resize-handle-7\",\n            \"mosaic-resize-handle-8\",\n            \"mosaic-resize-handle-9\",\n            \"mosaic-resize-handle-10\",\n            \"mosaic-resize-handle-11\",\n            \"mosaic-resize-handle-12\",\n        ],\n    };\n\n    /* css helpers */\n    getWidthClass(e) {\n        for (const cls of this.layout.widthClasses) {\n            if ($(e).hasClass(cls)) {\n                return cls;\n            }\n        }\n        // Fallback\n        return this.layout.widthClasses[0];\n    }\n\n    getResizeHandleClassId(e) {\n        // Loop through resize handle classes\n        for (let idx = 0; idx < this.layout.resizeHandleClasses.length; idx++) {\n            if ($(e).hasClass(this.layout.resizeHandleClasses[idx])) {\n                return idx;\n            }\n        }\n        // Fallback\n        return 1;\n    }\n\n    addAppTile(type, url /*, id */) {\n        // Get value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: async (value) => {\n                // Get dom tree\n                value = this.mosaic.getDomTreeFromHtml(value);\n\n                // Add head tags\n                this.mosaic.addHeadTags(url, value);\n\n                // Add tile\n                await this.addTile(type, value.find(\".temp_body_tag\").html(), url);\n            },\n        });\n    }\n\n    async addAppTileHTML(type, response, url) {\n        let value = this.mosaic.getDomTreeFromHtml(response);\n        this.mosaic.addHeadTags(url, value);\n        await this.addTile(type, value.find(\".temp_body_tag\").html(), url);\n    }\n\n    editAppTile(url) {\n        var self = this;\n\n        // Focus on current window\n        window.parent.focus();\n\n        // Get new value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: function (value) {\n                // Get dom tree\n                value = self.mosaic.getDomTreeFromHtml(value);\n\n                // Remove head tags\n                self.mosaic.removeHeadTags(url);\n\n                // Add head tags\n                self.mosaic.addHeadTags(url, value);\n\n                // Update tile\n                var $tile = $(\n                    \".mosaic-selected-tile .mosaic-tile-content\",\n                    self.mosaic.document,\n                );\n                $tile.html(value.find(\".temp_body_tag\").html()); // jshint ignore:line\n                $tile.attr(\"data-tileUrl\", url.replace(/&/gim, \"&amp;\"));\n            },\n        });\n    }\n\n    async addTile(type, value, tileUrl) {\n        var self = this;\n        // Set dragging state\n        self.mosaic.panels.addClass(\"mosaic-panel-dragging mosaic-panel-dragging-new\");\n\n        // Add helper\n        const add_helper = document.createElement(\"div\");\n        add_helper.classList.add(\"mosaic-grid-row\");\n        add_helper.innerHTML = `<div class=\"mosaic-grid-cell col\">\n                <div class=\"movable removable mosaic-tile mosaic-${type}-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\">\n                    <div class=\"mosaic-tile-content\" data-tileUrl=\"${\n                        tileUrl && tileUrl.replace(/&/gim, \"&amp;\")\n                    }\">\n                        ${value}\n                    </div>\n                </div>\n            </div>`;\n        self.mosaic.panels[0].append(add_helper);\n        log.debug(`appended helper ${type}`);\n\n        // Set helper min size\n        var helper = self.mosaic.panels.find(\".mosaic-helper-tile-new\");\n\n        // Get max width\n        var width = 0;\n        self.mosaic.panels.each(function () {\n            if ($(this).width() > width) {\n                width = $(this).width();\n            }\n        });\n\n        // Set width\n        if (helper.width() < width / 4) {\n            helper.width(width / 4);\n        } else {\n            helper.width(helper.width());\n        }\n\n        var tile = new Tile(self.mosaic, helper);\n        await tile.initialize();\n        tile.cacheHtml();\n        tile.scanRegistry();\n    }\n\n    getDefaultValue(tile_config) {\n        var self = this;\n        var start, end;\n\n        // Wrap title and description fields for proper styles\n        if (tile_config.name === \"IDublinCore-title\") {\n            start = '<h1 class=\"documentFirstHeading\">';\n            end = \"</h1>\";\n        } else if (tile_config.name === \"IDublinCore-description\") {\n            start = '<p class=\"documentDescription\">';\n            end = \"</p>\";\n        } else {\n            start = \"<div>\";\n            end = \"</div>\";\n        }\n\n        switch (tile_config.tile_type) {\n            case \"field\":\n                switch (tile_config.widget) {\n                    case \"z3c.form.browser.text.TextWidget\":\n                    case \"z3c.form.browser.text.TextFieldWidget\":\n                        var textval = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"input\")\n                            .attr(\"value\");\n                        return `${start}${textval}${end}`;\n                    case \"z3c.form.browser.textarea.TextAreaWidget\":\n                    case \"z3c.form.browser.textarea.TextAreaFieldWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesFieldWidget\":\n                        var lines = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"textarea\")\n                            .val()\n                            .replace(\"\\\\n\", \"<br/>\");\n                        return `${start}${lines}${end}`;\n                    case \"plone.app.z3cform.widget.RichTextFieldWidget\":\n                    case \"plone.app.z3cform.widgets.richtext.RichTextFieldWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygFieldWidget\":\n                    case \"plone.app.widgets.dx.RichTextWidget\":\n                        return $(\"#\" + tile_config.id)\n                            .find(\"textarea\")\n                            .val();\n                    default:\n                        return `<div class=\"text-bg-secondary\">Placeholder for field:<br/><b>${tile_config.label}</b></div>`;\n                }\n            default:\n                return tile_config.default_value;\n        }\n    }\n\n    getPageContent(exportLayout) {\n        var self = this;\n\n        var getLayoutRow = function (obj) {\n            var body = \"\";\n\n            // Check if not an empty row\n            if (\n                $(obj).hasClass(\"mosaic-empty-row\") === false &&\n                $(obj).find(\".mosaic-tile\").length >= 0\n            ) {\n                // Add row open tag\n                classNames = $(obj).attr(\"class\");\n                body += '      <div class=\"' + classNames + '\">\\n';\n\n                // Loop through rows\n                $(obj)\n                    .children(\".mosaic-grid-cell\")\n                    .each(function () {\n                        // Add cell start tag\n                        body += '        <div class=\"' + $(this).attr(\"class\") + '\">\\n'; // jshint ignore:line\n\n                        $(this)\n                            .children()\n                            .each(function () {\n                                if ($(this).hasClass(\"mosaic-tile\")) {\n                                    body += $(this)\n                                        .data(\"mosaic-tile\")\n                                        .getHtmlBody(exportLayout);\n                                } else if ($(this).hasClass(\"mosaic-innergrid-row\")) {\n                                    body += getLayoutRow(this);\n                                }\n                            });\n\n                        // Add cell end tag\n                        body += \"        </div>\\n\";\n                    });\n\n                // Add row close tag\n                body += \"      </div>\\n\";\n            }\n            return body;\n        };\n\n        // Content\n        var content,\n            body = \"\",\n            classNames = \"\";\n\n        // Add body tag\n        body += \"  <body>\\n\";\n\n        // Loop through panels\n        $(\"[data-panel]\", self.mosaic.document).each(function () {\n            // Add open panel tag\n            body += '    <div data-panel=\"' + $(this).data(\"panel\") + '\"';\n            body += '         data-max-columns=\"' + $(this).data(\"max-columns\") + '\">\\n';\n\n            $(this)\n                .children()\n                .each(function () {\n                    if ($(this).hasClass(\"mosaic-grid-row\")) {\n                        body += getLayoutRow(this);\n                    }\n                });\n\n            // Add close panel tag\n            body += \"    </div>\\n\";\n        });\n\n        // Add close tag\n        body += \"  </body>\\n\";\n\n        content =\n            '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\" data-layout=\"' +\n            self.mosaic.options.layout +\n            '\">\\n'; // jshint ignore:line\n        content += body;\n        content += \"</html>\\n\";\n        return content;\n    }\n\n    saveLayoutToForm() {\n        var self = this;\n        var $customLayout = $(\n            \"#form-widgets-ILayoutAware-customContentLayout, \" +\n                \"[name='form.widgets.ILayoutAware.customContentLayout']\",\n        );\n\n        if (self.mosaic.hasContentLayout) {\n            $customLayout.val(\"\");\n        } else {\n            $customLayout.val(self.getPageContent());\n        }\n    }\n\n    init_events() {\n        var self = this;\n        var DocumentKeyup = function (e) {\n            // Check if alt\n            if (e.keyCode === 18) {\n                var date = new Date();\n                var enabled = $(\".mosaic-panel\", self.mosaic.document).data(\n                    \"advanced-enabled\",\n                );\n                var elapsed = date.getTime() - enabled;\n                if (elapsed > 400) {\n                    $(\".mosaic-panel\", self.mosaic.document).removeClass(\n                        \"mosaic-advanced\",\n                    );\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", self.mosaic.document).removeClass(\"inner-subcolumn\");\n            }\n        };\n\n        // Keydown handler\n        var DocumentKeydown = function (e) {\n            const _document = self.mosaic.document;\n            // Tab key\n            if (e.keyCode === 9) {\n                // blur all active tiles. and set focus\n                _document.querySelectorAll(\".mosaic-selected-tile\").forEach((tile) => {\n                    $(tile).data(\"mosaic-tile\").blur();\n                });\n                // focus new tile\n                var focused_tile = document.activeElement.closest(\".mosaic-tile\");\n                if (focused_tile) {\n                    $(focused_tile).data(\"mosaic-tile\").focus();\n                }\n            }\n            // Check if alt\n            if (e.keyCode === 18) {\n                if ($(\".mosaic-panel\", _document).hasClass(\"mosaic-advanced\")) {\n                    $(\".mosaic-panel\", _document).removeClass(\"mosaic-advanced\");\n                } else {\n                    var date = new Date();\n                    $(\".mosaic-panel\", _document).addClass(\"mosaic-advanced\");\n                    $(\".mosaic-panel\", _document).data(\n                        \"advanced-enabled\",\n                        date.getTime(),\n                    );\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", _document).addClass(\"inner-subcolumn\");\n            }\n\n            // Check if esc\n            if (e.keyCode === 27) {\n                // Check if dragging\n                var original_tile = _document.querySelectorAll(\".mosaic-original-tile\");\n                if (original_tile.length > 0) {\n                    original_tile.forEach((tile) => {\n                        tile.classList.add(\"mosaic-drag-cancel\");\n                        if (tile.classList.contains(\"mosaic-helper-tile-new\")) {\n                            // original row\n                            const $orig_row = $(tile).parent().parent();\n                            // dismiss dragging tile and remove row\n                            $(tile).remove();\n                            $orig_row.mosaicCleanupRow();\n                            // Remove dragging class from content\n                            self.mosaic.panels.removeClass(\n                                \"mosaic-panel-dragging mosaic-panel-dragging-new\",\n                            );\n                            // Hide all dividers\n                            $(\n                                \".mosaic-selected-divider\",\n                                self.mosaic.document,\n                            ).removeClass(\"mosaic-selected-divider\");\n                        }\n                    });\n                    // Deselect tile\n                } else {\n                    $(\".mosaic-selected-tile\", _document).each(function () {\n                        $(this).trigger(\"blur\");\n                    });\n                }\n\n                // Find resize helper\n                $(\".mosaic-resize-handle-helper\", _document).each(function () {\n                    // Remove resizing state\n                    $(this).parents(\"[data-panel]\").removeClass(\"mosaic-panel-resizing\");\n                    $(this).parent().removeClass(\"mosaic-row-resizing\");\n                    $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                    // Remove helper\n                    $(this).remove();\n                });\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"keydown\",\n            \"pat-layout--keydown\",\n            DocumentKeydown,\n        );\n        events.add_event_listener(\n            self.mosaic.document,\n            \"keyup\",\n            \"pat-layout--keyup\",\n            DocumentKeyup,\n        );\n\n        // Add deselect\n        const DocumentMousedown = function (e) {\n            // Get element\n            let elm;\n            if (e.target) {\n                elm = e.target;\n            } else if (e.srcElement) {\n                elm = e.srcElement;\n            }\n\n            // Find resize helper\n            var new_tile = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n            if (new_tile.length > 0) {\n                new_tile.each(function () {\n                    // Handle drag end\n                    $(this).mosaicHandleDragEnd();\n                });\n            }\n\n            // If clicked inside TinyMCE or Modal exit\n            if ($(elm).parents(\".mce-content-body, .tox, .modal-wrapper\").length > 0) {\n                return;\n            }\n\n            // If clicked outside a tile\n            if ($(elm).parents(\".mosaic-tile\").length === 0) {\n                // Deselect tiles\n                self.mosaic.document\n                    .querySelectorAll(\".mosaic-selected-tile:not(.mosaic-tile-loading)\")\n                    .forEach((el) => {\n                        $(el).data(\"mosaic-tile\").blur();\n                    });\n                // Check if outside toolbar\n                if ($(elm).parents(\".mosaic-toolbar\").length === 0) {\n                    // Set actions\n                    self.mosaic.toolbar.SelectedTileChange();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousedown\",\n            \"pat-layout--mousedown\",\n            DocumentMousedown,\n        );\n\n        // Handle mouse move event: when holding down mouse left button and dragging the handler left or right.\n        const DocumentMousemove = function (e) {\n            // Find resize helper\n            $(\".mosaic-helper-tile-new\", self.mosaic.document).each(function () {\n                // Get offset\n                const offset = $(this).parent().offset();\n\n                // Get mouse x\n                $(this).css(\"top\", e.pageY + 3 - offset.top);\n                $(this).css(\"left\", e.pageX + 3 - offset.left);\n            });\n\n            // Find resize helper - there is actually only one\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n                var cur_snap_offset;\n\n                // Get helper\n                var helper = $(this);\n\n                // Get row\n                var row = helper.parent();\n                var resize_handle_index = helper.data(\"resize_handle_index\");\n\n                // Get mouse x\n                var mouse_x = parseFloat(e.pageX - row.offset().left - 4);\n\n                // Get mouse percentage\n                var mouse_percentage = Math.round(\n                    (mouse_x / helper.data(\"row_width\")) * 100,\n                );\n\n                // Get closest snap location\n                var snap = 8;\n                var snap_offset = 8;\n\n                var grid_percent = GetGridPercentList();\n\n                grid_percent.forEach(function (perc) {\n                    cur_snap_offset = Math.abs(perc - mouse_percentage);\n                    if (cur_snap_offset < snap_offset) {\n                        snap = perc;\n                        snap_offset = cur_snap_offset;\n                    }\n                });\n\n                var snap_size = GetBootstrapColByPercent(snap);\n\n                var column_sizes = helper.data(\"column_sizes\");\n                var col_size_before = 0;\n                var col_size_after = 0;\n                for (var i = 0; i < column_sizes.length; i++) {\n                    if (i < resize_handle_index) {\n                        col_size_before += column_sizes[i] ? column_sizes[i] : 2;\n                    }\n                    if (i > resize_handle_index) {\n                        col_size_after += column_sizes[i] ? column_sizes[i] : 2;\n                    }\n                }\n                var col_size = snap_size - col_size_before;\n                var col_size_max = 12 - col_size_before - col_size_after;\n                // col_size should not be larger than max size and not less than 1\n                col_size =\n                    col_size > col_size_max ? col_size_max : col_size < 1 ? 1 : col_size;\n\n                if (helper.data(\"nr_of_columns\") > 0) {\n                    var col_size_sum = 0;\n                    var set_resize_handler = false;\n                    var resize_css_classes = self.layout.resizeClasses.join(\" \");\n                    var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                    // Loop through columns\n                    row.children(\".mosaic-resize-placeholder\").each(function (index) {\n                        if (index === resize_handle_index) {\n                            // set new col_size for index\n                            column_sizes[index] = col_size;\n                            var col_size_class = GetWidthClassByColSize(col_size);\n                            $(this)\n                                .removeClass(width_css_classes)\n                                .addClass(col_size_class)\n                                .find(\".info\")\n                                .html(col_size);\n                            set_resize_handler = true;\n                        }\n\n                        // move other resize placeholders accordingly\n                        $(this)\n                            .removeClass(resize_css_classes)\n                            .addClass(`mosaic-resize-${col_size_sum}`);\n\n                        col_size_sum += column_sizes[index];\n\n                        if (set_resize_handler) {\n                            // trick to move handle helper too\n                            $(\".mosaic-resize-handle-helper\", row)\n                                .removeClass(resize_css_classes)\n                                .addClass(`mosaic-resize-${col_size_sum}`);\n                            set_resize_handler = false;\n                        }\n                    });\n\n                    // Set new size\n                    $(this).data(\"column_sizes\", column_sizes);\n                }\n            });\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousemove\",\n            \"pat-layout--mousemove\",\n            DocumentMousemove,\n        );\n        events.add_event_listener(\n            self.mosaic.document,\n            \"dragover\",\n            \"pat-layout--dragover\",\n            DocumentMousemove,\n        );\n\n        // Handle mouse up event\n        // When resizing is done on mouse up event apply the changes to the div elements\n        const DocumentMouseup = function () {\n            // Find resize helper\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n                var resize_handle_index = $(this).data(\"resize_handle_index\");\n\n                // Cleanup original row\n                $(this).parent().parent().mosaicCleanupRow();\n\n                // Get panel\n                var panel = $(this).parents(\"[data-panel]\");\n\n                // Get column sizes\n                var column_sizes = $(this).data(\"column_sizes\");\n\n                // Set column sizes\n                $(this)\n                    .parent()\n                    .children(\".mosaic-grid-cell\")\n                    .each(function (i) {\n                        $(this)\n                            .removeClass(self.layout.widthClasses.join(\" \"))\n                            .addClass(GetWidthClassByColSize(column_sizes[i]));\n\n                        var can_reset = $(this).hasClass(\"col\");\n                        if (!can_reset && i === resize_handle_index) {\n                            $(this)\n                                .children(\".mosaic-tile\")\n                                .first()\n                                .children(\".mosaic-tile-side-tools\")\n                                .each(function () {\n                                    var $tileSideTools = $(this);\n\n                                    $tileSideTools\n                                        .children(\".mosaic-tile-label.reset\")\n                                        .remove();\n\n                                    $tileSideTools.append(\n                                        $(self.mosaic.document.createElement(\"div\"))\n                                            .addClass(\"mosaic-tile-label reset\")\n                                            .append(\n                                                AddResetAnchor(\n                                                    $tileSideTools,\n                                                    column_sizes[i],\n                                                ),\n                                            ),\n                                    );\n                                });\n                        }\n                    });\n\n                // Remove resizing state\n                panel.removeClass(\"mosaic-panel-resizing\");\n                $(this).parent().removeClass(\"mosaic-row-resizing\");\n                $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                // Set resize handles\n                $(this).parent().mosaicSetResizeHandles();\n                var $tile = panel.find(\".mosaic-selected-tile\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n\n                // Remove helper\n                $(this).remove();\n            });\n        };\n\n        // Bind event\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mouseup\",\n            \"pat-layout--mouseup\",\n            DocumentMouseup,\n        );\n\n        // Handle mousemove on tile\n        const TileMousemove = function (e) {\n            // only if dragging\n            if (\n                $(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging\") ===\n                false\n            ) {\n                return;\n            }\n\n            // Hide all dividers\n            $(\".mosaic-selected-divider\", self.mosaic.document).removeClass(\n                \"mosaic-selected-divider\",\n            );\n\n            // Don't show dividers if above original or floating tile\n            if (\n                $(this).hasClass(\"mosaic-original-tile\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-left\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-right\") === false\n            ) {\n                // Get direction\n                var dir = $(this).mosaicGetDirection(e);\n                var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                // Check if left or right divider\n                if (dir === \"left\" || dir === \"right\") {\n                    var row = divider.parent().parent().parent();\n                    var cols = row.children(\".mosaic-grid-cell\").filter((idx, el) => {\n                        // filter out original tile to enable moving tiles\n                        // inside row with max-columns tiles\n                        return $(el).find(\".mosaic-original-tile\").length === 0;\n                    });\n\n                    if (cols.length >= $(\".mosaic-panel\").data(\"max-columns\")) {\n                        // This row already up to the max amount of columns allowed for this layout\n                        // do not allow new items to be dropped alingside any elements in this row.\n                        return;\n                    }\n\n                    // If row has multiple columns\n                    if (row.children(\".mosaic-grid-cell\").length > 1) {\n                        divider.height(row.height() + 5);\n                        divider.css(\n                            \"top\",\n                            row.offset().top - divider.parent().offset().top - 5,\n                        );\n                    } else {\n                        divider.height(divider.parent().height() + 5);\n                        divider.css(\"top\", -5);\n                    }\n                }\n\n                // Show divider\n                divider.addClass(\"mosaic-selected-divider\");\n            }\n        };\n\n        // Bind events\n        self.mosaic.document.querySelectorAll(\".mosaic-tile\").forEach((tile) => {\n            events.add_event_listener(\n                tile,\n                \"mousemove\",\n                \"pat-layout--mousemove-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"dragover\",\n                \"pat-layout--dragover-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"click\",\n                \"pat-layout--click-tile\",\n                function () {\n                    if (\n                        $(\".mosaic-helper-tile-new\", self.mosaic.document).length === 0\n                    ) {\n                        // only if not dropping tile\n                        if ($(this).data(\"mosaic-tile\")) {\n                            $(this).data(\"mosaic-tile\").select();\n                        }\n                    }\n                },\n            );\n        });\n\n        const applyCustomCss = function (e) {\n            if ($(e.target).attr(\"id\") === \"custom-css-input-box\") {\n                return;\n            }\n            $.each($(\"div.mosaic-set-custom-css\"), function () {\n                var parent = $(this).parent();\n                var base_css = \"mosaic-grid-row\";\n                if (parent.hasClass(\"mosaic-innergrid-row\")) {\n                    base_css = \"mosaic-grid-row mosaic-innergrid-row\";\n                }\n                var classes = $(this).find(\"input#custom-css-input-box\").val();\n                base_css += \" \" + classes;\n                parent.attr(\"class\", base_css);\n                $(this).remove();\n            });\n        };\n\n        const CustomCSSOnDblClick = function (e) {\n            // Only do this for \"mosaic-grid-row\" if advanced mode is enabled\n            var target = $(e.target);\n            var obj = target.parents(\"[data-panel]\");\n            if (obj.hasClass(\"mosaic-advanced\") && target.hasClass(\"mosaic-grid-row\")) {\n                // Check we don't have an input field already\n                if ($(target).find(\".mosaic-set-custom-css\").length > 0) {\n                    return;\n                }\n\n                // We are in advance mode\n                var custom_classes = [];\n                $.each(target.attr(\"class\").split(\" \"), function () {\n                    if (\n                        this !== undefined &&\n                        this !== \"mosaic-grid-row\" &&\n                        this !== \"mosaic-innergrid-row\"\n                    ) {\n                        custom_classes.push(this);\n                    }\n                });\n                var input = $(\n                    \"<input type='text' id='custom-css-input-box'></input>\",\n                ).val(custom_classes.join(\" \"));\n                var div = $(\"<div></div>\")\n                    .addClass(\"mosaic-set-custom-css\")\n                    .append($(\"<label>Custom CSS for this row:</label>\"))\n                    .append(input);\n                target.append(div);\n            }\n        };\n        self.mosaic.document.querySelectorAll(\".mosaic-grid-row\").forEach((gridrow) => {\n            events.add_event_listener(\n                gridrow,\n                \"dblclick\",\n                \"pat-layout--dblclick-gridrow\",\n                CustomCSSOnDblClick,\n            );\n        });\n        events.add_event_listener(\n            self.mosaic.document,\n            \"click\",\n            \"pat-layout--click\",\n            applyCustomCss,\n        );\n    }\n\n    initialize_panels() {\n        var self = this;\n\n        self.initJQueryHelpers();\n        self.init_events();\n\n        // Loop through matched elements\n        var total = self.mosaic.panels.length;\n\n        for (var i = 0; i < total; i++) {\n            // Get current object\n            var obj = $(self.mosaic.panels[i]);\n\n            // Add icons and dividers\n            obj.find(\".mosaic-tile\").each(async function () {\n                var tile = new Tile(self.mosaic, this);\n                await tile.initialize();\n                $(this).mosaicAddDrag();\n            });\n            obj.mosaicAddEmptyRows();\n            obj.children(\".mosaic-grid-row\").mosaicSetResizeHandles();\n            if (i === total - 1) {\n                // Get biggest panel\n                var width = 0;\n                var index = 0;\n                self.mosaic.panels.each(function (j) {\n                    if ($(this).width() > width) {\n                        width = $(this).width();\n                        index = j;\n                    }\n                });\n\n                // Select first tile in biggest panel\n                var $tile = self.mosaic.panels.eq(index).find(\".mosaic-tile:first\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n            }\n\n            obj.find(\".mosaic-innergrid-row\").each(function () {\n                $(this).mosaicAddMouseMoveInnergridRow();\n                $(this).mosaicSetResizeHandles();\n                var that = $(this);\n                [\"top\", \"bottom\"].forEach(function (pos) {\n                    that.append(\n                        $(self.mosaic.document.createElement(\"div\")).addClass(\n                            \"mosaic-divider mosaic-divider-\" + pos,\n                        ),\n                    );\n                });\n            });\n        }\n    }\n\n    initJQueryHelpers() {\n        var self = this;\n        var mosaic_doc = self.mosaic.document;\n\n        $.fn.mosaicAddMouseMoveEmptyRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (/* e */) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\",\n                        );\n                        $(this).children(\"div\").addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add mouse move handler to inner grid rows\n         *\n         * @id jQuery.mosaicAddMouseMoveInnergridRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddMouseMoveInnergridRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (e) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\",\n                        );\n\n                        // Get direction\n                        var dir = $(this).mosaicGetDirection(e);\n                        var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                        // Show divider\n                        divider.addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add empty rows\n         *\n         * @id jQuery.mosaicAddEmptyRows\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddEmptyRows = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Loop through rows\n                $(this)\n                    .find(\".mosaic-grid-row:not(.mosaic-innergrid-row)\")\n                    .each(function () {\n                        $(this).before(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\"mosaic-grid-cell col\")\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\")).append(\n                                                $(\n                                                    mosaic_doc.createElement(\"div\"),\n                                                ).addClass(\"mosaic-tile-outer-border\"),\n                                            ),\n                                        ),\n                                )\n                                .mosaicAddMouseMoveEmptyRow(),\n                        );\n                        if ($(this).nextAll(\".mosaic-grid-row\").length === 0) {\n                            $(this).after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(\n                                                    mosaic_doc.createElement(\"div\"),\n                                                ).append(\n                                                    $(\n                                                        mosaic_doc.createElement(\"div\"),\n                                                    ).addClass(\n                                                        \"mosaic-tile-outer-border\",\n                                                    ),\n                                                ),\n                                            ),\n                                    )\n                                    .mosaicAddMouseMoveEmptyRow(),\n                            );\n                        }\n                    });\n\n                if (\n                    $(this).find(\".mosaic-grid-row:not(.mosaic-innergrid-row)\")\n                        .length === 0\n                ) {\n                    $(this).append(\n                        $(mosaic_doc.createElement(\"div\"))\n                            .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\")).append(\n                                            $(mosaic_doc.createElement(\"div\")).addClass(\n                                                \"mosaic-tile-outer-border\",\n                                            ),\n                                        ),\n                                    ),\n                            )\n                            .mosaicAddMouseMoveEmptyRow(),\n                    );\n                }\n            });\n        };\n\n        /**\n         * Add draggable to matched elements\n         *\n         * @id jQuery.mosaicAddDrag\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddDrag = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                var tile = $(this);\n\n                var DragMove = function (event) {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    var offset = helper.parents(\"[data-panel]\").offset();\n                    if (offset) {\n                        helper.css(\"top\", event.pageY + 3 - offset.top);\n                        helper.css(\"left\", event.pageX + 3 - offset.left);\n                    }\n                };\n\n                var DragStop = function () {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    $(mosaic_doc).off(\"mousemove\", DragMove).off(\"mouseup\", DragStop);\n\n                    // Handle drag end\n                    helper.mosaicHandleDragEnd();\n                    helper.remove();\n                };\n\n                return tile.each(function () {\n                    tile.find(\"div.mosaic-drag-handle\")\n                        .off(\"mousedown\")\n                        .on(\"mousedown\", function (event) {\n                            var downX = event.pageX;\n                            var downY = event.pageY;\n                            var DragCheckMove = function (event) {\n                                if (\n                                    Math.max(\n                                        Math.abs(downX - event.pageX),\n                                        Math.abs(downY - event.pageY),\n                                    ) >= 1\n                                ) {\n                                    // Add dragging class to content area\n                                    self.mosaic.panels.addClass(\"mosaic-panel-dragging\");\n                                    $(\".mosaic-selected-tile\", mosaic_doc)\n                                        .removeClass(\"mosaic-selected-tile\")\n                                        .children(\".mosaic-tile-content\")\n                                        .trigger(\"blur\");\n\n                                    var originaltile = $(event.target).parents(\n                                        \".mosaic-tile\",\n                                    );\n                                    originaltile.addClass(\"mosaic-original-tile\");\n\n                                    var clone = originaltile.clone(true);\n                                    clone\n                                        .css({\n                                            \"width\": originaltile.width(),\n                                            \"max-height\": \"50%\",\n                                            \"position\": \"absolute\",\n                                            \"opacity\": 0.5,\n                                        })\n                                        .addClass(\"mosaic-helper-tile\");\n                                    originaltile.parents(\"[data-panel]\").append(clone);\n\n                                    $(mosaic_doc).on(\"mousemove\", DragMove);\n                                    $(mosaic_doc).on(\"mouseup\", DragStop);\n                                    $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                                }\n                            };\n                            $(mosaic_doc).on(\"mousemove\", DragCheckMove);\n                            $(mosaic_doc).on(\"mouseup\", function () {\n                                $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                            });\n                        });\n                });\n            });\n        };\n\n        /**\n         * Event handler for drag end - add new tile\n         *\n         * @id jQuery.mosaicHandleDragEnd\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicHandleDragEnd = function () {\n            // Get layout object\n            var obj = $(this).parents(\"[data-panel]\");\n\n            // Remove dragging class from content\n            self.mosaic.panels.removeClass(\n                \"mosaic-panel-dragging mosaic-panel-dragging-new\",\n            );\n\n            // Get direction\n            var divider = $(\".mosaic-selected-divider\", mosaic_doc);\n            var drop = divider.parent();\n            var dir = \"\";\n            for (const _dir of [\"top\", \"bottom\", \"left\", \"right\"]) {\n                if (divider.hasClass(\"mosaic-divider-\" + _dir)) {\n                    dir = _dir;\n                }\n            }\n            divider.removeClass(\"mosaic-selected-divider\");\n\n            // True if new tile is inserted\n            var new_tile = $(\".mosaic-helper-tile-new\", mosaic_doc).length > 0;\n            var original_tile = $(\".mosaic-original-tile\", mosaic_doc);\n            // get original row here, because tile might be moved\n            var original_row = original_tile.closest(\".mosaic-grid-row\");\n\n            // If divider is not found or not sane drop, act like esc is pressed\n            if (divider.length === 0 || drop.hasClass(\"mosaic-helper-tile\")) {\n                original_tile.addClass(\"mosaic-drag-cancel\");\n            }\n\n            const fixup_classes = (_t) => {\n                _t.removeClass(\"mosaic-drag-cancel\");\n                _t.removeClass(\n                    \"mosaic-original-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-tile-align-right mosaic-tile-align-left\",\n                );\n                _t.css({ width: \"\", left: \"\", top: \"\" });\n                if (!new_tile) {\n                    _t.addClass(\"mosaic-new-tile\");\n                }\n            };\n\n            if (\n                // Check if esc is pressed\n                original_tile.hasClass(\"mosaic-drag-cancel\") ||\n                // Not dropped on tile and empty row\n                (drop.hasClass(\"mosaic-tile\") === false &&\n                    drop.hasClass(\"mosaic-innergrid-row\") === false &&\n                    drop.hasClass(\"mosaic-empty-row\") === false) ||\n                // Check if max columns rows is reached\n                (drop.parent().parent().children(\".mosaic-grid-cell\").length >=\n                    obj.data(\"max-columns\") &&\n                    (dir === \"left\" || dir === \"right\"))\n            ) {\n                fixup_classes(original_tile);\n\n                // Dropped on empty row\n            } else if (drop.hasClass(\"mosaic-empty-row\")) {\n                // Replace empty with normal row class\n                drop.removeClass(\"mosaic-empty-row\")\n                    .attr(\n                        \"class\",\n                        original_tile.parents(\".mosaic-grid-row\").first().attr(\"class\"),\n                    )\n                    .off(\"mousemove\");\n\n                // Clean cell\n                drop.children(\".mosaic-grid-cell\").children(\"div\").remove();\n\n                fixup_classes(original_tile);\n\n                // Add tile to empty row\n                drop.children(\".mosaic-grid-cell\").append(original_tile);\n\n                // Dropped on row or below an inner grid\n            } else {\n                /* When the layout object has the special class (Assigned in line 82), wrap\n                the tile in a div.mosaic-grid-cell so it would create an inner column */\n                fixup_classes(original_tile);\n\n                if (obj.hasClass(\"inner-subcolumn\")) {\n                    original_tile = $(mosaic_doc.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-row mosaic-innergrid-row\")\n                        .append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-cell col\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\")).append(\n                                        $(mosaic_doc.createElement(\"div\")).addClass(\n                                            \"mosaic-innergrid-outer-border\",\n                                        ),\n                                    ),\n                                )\n                                .append(original_tile),\n                        )\n                        .mosaicAddMouseMoveInnergridRow();\n                    for (const pos of [\"top\", \"bottom\"]) {\n                        original_tile.append(\n                            $(mosaic_doc.createElement(\"div\")).addClass(\n                                \"mosaic-divider mosaic-divider-\" + pos,\n                            ),\n                        );\n                    }\n                }\n\n                // If top\n                if (dir === \"top\") {\n                    // Add tile before\n                    drop.before(original_tile);\n\n                    // If bottom\n                } else if (dir === \"bottom\") {\n                    // Add tile after\n                    drop.after(original_tile);\n\n                    // If left\n                } else if (dir === \"left\" || dir === \"right\") {\n                    var _col = drop.parent();\n                    var _row = _col.parent();\n                    var _children_count = _row.children(\".mosaic-grid-cell\").length;\n\n                    // Check if only 1 column in the row\n                    if (_children_count.length === 1) {\n                        // Put tiles above dropped tile in a new row above\n                        var prev_elms = drop.prevAll();\n                        if (prev_elms.length > 0) {\n                            _row.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(prev_elms.get().reverse())\n                                                    .clone(true)\n                                                    .mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            prev_elms.remove();\n                        }\n\n                        // Put tiles below dropped tile in a new row below\n                        var next_elms = drop.nextAll();\n                        if (next_elms.length > 0) {\n                            _row.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                next_elms.clone(true).mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            next_elms.remove();\n                        }\n\n                        // Resize current column\n                        _col.removeClass(self.layout.widthClasses.join(\" \")).addClass(\n                            \"col\",\n                        );\n\n                        // Create column with dragged tile in it\n                        if (dir === \"left\") {\n                            drop.parent().before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile),\n                            );\n                        } else {\n                            drop.parent().after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile),\n                            );\n                        }\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n\n                        // Dropped inside column\n                    } else {\n                        // Create new column\n                        if (dir === \"left\") {\n                            _col.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile),\n                            );\n                        } else {\n                            _col.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile),\n                            );\n                        }\n\n                        // Resize columns\n                        _row.mosaicSetColumnSizes();\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n                    }\n                }\n            }\n\n            // Remove remaining empty rows\n            self.mosaic.panels.find(\".mosaic-grid-row:not(:has(.mosaic-tile))\").remove();\n            self.mosaic.panels.find(\".mosaic-empty-row\").remove();\n\n            // Cleanup original row\n            original_row.mosaicCleanupRow();\n\n            // Add empty rows\n            self.mosaic.panels.mosaicAddEmptyRows();\n\n            // re-initialize events\n            self.init_events();\n\n            // Select new tile and make it draggables\n            if (new_tile && original_tile.length > 0) {\n                original_tile.mosaicAddDrag();\n                original_tile.data(\"mosaic-tile\").initializeContent(true);\n                original_tile.data(\"mosaic-tile\").select();\n            }\n        };\n\n        /**\n         * Set the sizes of the column\n         *\n         * @id jQuery.mosaicSetColumnSizes\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetColumnSizes = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Resize columns in the row\n                var column_sizes = [];\n                var $gridCells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = $gridCells.length;\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                // This will reset the width classes - it will automatically set the widths\n\n                $gridCells.each(function (idx) {\n                    $(this).removeClass(width_css_classes);\n\n                    var col_size = Math.floor(12 / nr_of_columns);\n                    var col_size_last = 12 - col_size * (nr_of_columns - 1);\n\n                    for (var j = 0; j < nr_of_columns; j++) {\n                        if (j === nr_of_columns - 1) {\n                            col_size = col_size_last;\n                        }\n                        if (idx === j) {\n                            column_sizes.push(col_size);\n                            $(this).addClass(\"col\");\n                        }\n                    }\n                });\n\n                $(this).data(\"column_sizes\", column_sizes);\n            });\n        };\n\n        /**\n         * Add new resize handlers\n         *\n         * @id jQuery.mosaicSetResizeHandles\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetResizeHandles = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Remove resize handles\n                $(this).children(\".mosaic-resize-handle\").remove();\n\n                // Check number of columns\n                var grid_cells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = grid_cells.length;\n\n                if (nr_of_columns <= 12) {\n                    var column_sizes = [];\n                    var zero_count = 0;\n                    var col_sum = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        var col_size = GetColSizeByColClass(\n                            self.getWidthClass(grid_cells[i]),\n                        );\n                        column_sizes.push(col_size);\n                        col_sum = col_sum + col_size;\n                        if (col_size === 0) {\n                            zero_count = zero_count + 1;\n                        }\n                    }\n\n                    var zero_col = 0;\n                    if (zero_count) {\n                        zero_col = (12 - col_sum) / zero_count;\n                    }\n\n                    var resize_col_size = 0;\n                    col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n                        resize_col_size = resize_col_size + col_size;\n\n                        $(this).append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-handle mosaic-resize-handle-${\n                                        i + 1\n                                    }` + ` mosaic-resize-${resize_col_size}`,\n                                )\n                                .data(\"resize_handle_index\", i),\n                        );\n\n                        // set counted size to cell data\n                        $(grid_cells[i]).data(\"col_size\", col_size);\n                    }\n                }\n\n                // Mouse down handler on resize handle\n                $(this)\n                    .children(\".mosaic-resize-handle\")\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function (/* e */) {\n                        var $currRow = $(this).parent();\n                        var $mosaicGridCellChildren =\n                            $currRow.children(\".mosaic-grid-cell\");\n                        var nr_of_columns = $mosaicGridCellChildren.length;\n\n                        if (nr_of_columns > 12) {\n                            return;\n                        }\n                        var col_size_sum = 0;\n                        var column_sizes = [];\n\n                        $mosaicGridCellChildren.each(function () {\n                            var col_size = $(this).data(\"col_size\"); // get computed size of the column\n                            column_sizes.push(col_size);\n\n                            var placeholder = $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-placeholder col-${col_size} mosaic-resize-${col_size_sum}`,\n                                )\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\n                                            \"mosaic-resize-placeholder-inner-border\",\n                                        )\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"info\")\n                                                .html(col_size),\n                                        ),\n                                );\n\n                            // Add placeholder\n                            $currRow.append(placeholder);\n\n                            // summarize column sizes for placeholder classes\n                            col_size_sum += col_size;\n                        });\n\n                        // Get resize handle index\n                        var resize_handle_index = self.getResizeHandleClassId(this);\n\n                        // Add helper\n                        $currRow.append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    \"mosaic-resize-handle mosaic-resize-handle-helper\",\n                                )\n                                .addClass(\n                                    `mosaic-resize-${column_sizes[resize_handle_index]}`,\n                                )\n                                .data(\"row_width\", $currRow.width())\n                                .data(\"nr_of_columns\", nr_of_columns)\n                                .data(\"column_sizes\", column_sizes)\n                                .data(\"resize_handle_index\", resize_handle_index),\n                        );\n\n                        // Set resizing state\n                        $(this)\n                            .parents(\"[data-panel]\")\n                            .addClass(\"mosaic-panel-resizing\");\n                        $currRow.addClass(\"mosaic-row-resizing\");\n                        $(\".mosaic-selected-tile\", mosaic_doc)\n                            .children(\".mosaic-tile-content\")\n                            .trigger(\"blur\");\n\n                        // Prevent drag event\n                        return false;\n                    });\n            });\n        };\n\n        /**\n         * Cleanup row after tiles added or removed from the row\n         *\n         * @id jQuery.mosaicCleanupRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicCleanupRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Get original row\n                var original_row = $(this);\n\n                // Remove empty columns\n                original_row.children(\".mosaic-grid-cell\").each(function () {\n                    if ($(this).children().length === 0) {\n                        $(this).remove();\n\n                        // Resize columns\n                        original_row.mosaicSetColumnSizes();\n                    }\n                });\n\n                // Remove row if no tiles inside\n                if (original_row.find(\".mosaic-tile\").length === 0) {\n                    var del_row = original_row;\n\n                    // Check if next row available\n                    if (original_row.nextAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.next(\".mosaic-grid-row\");\n\n                        // Check if prev row available\n                    } else if (original_row.prevAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.prev(\".mosaic-grid-row\");\n\n                        // This is the last row\n                    } else {\n                        original_row.remove();\n                        return;\n                    }\n\n                    // Remove current row\n                    del_row.remove();\n                }\n\n                // Set resize handles\n                original_row.mosaicSetResizeHandles();\n            });\n        };\n\n        /**\n         * Get the direction based on the tile size and relative x and y coords of the cursor\n         *\n         * @id jQuery.mosaicGetDirection\n         * @param {Object} e Event object\n         * @return {String} Direction of the cursor relative to the tile\n         */\n        $.fn.mosaicGetDirection = function (e) {\n            // Calculate x, y, width and height\n            var width = parseFloat($(this).width());\n            var height = parseFloat($(this).height());\n            var x = parseFloat(e.pageX - $(this).offset().left - width / 2);\n            var y = parseFloat(e.pageY - $(this).offset().top - height / 2);\n            var halfwidth = width / 2;\n            var halfheight = height / 2;\n\n            // If left of center\n            if (x < 0) {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (-1 * halfwidth) / (-1 * halfheight)) {\n                        return \"top\";\n                    } else {\n                        return \"left\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < (-1 * halfwidth) / halfheight) {\n                        return \"left\";\n                    } else {\n                        return \"bottom\";\n                    }\n                }\n\n                // Right of center\n            } else {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (1 * halfwidth) / (-1 * halfheight)) {\n                        return \"right\";\n                    } else {\n                        return \"top\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < halfwidth / halfheight) {\n                        return \"bottom\";\n                    } else {\n                        return \"right\";\n                    }\n                }\n            }\n        };\n    }\n}\n\nvar AddResetAnchor = function ($tileSideTools, cols) {\n    var reset = document.createElement(\"a\");\n    var cols_str = typeof cols === \"undefined\" ? \"\" : \" (\" + cols + \")\";\n    reset.href = \"javascript:\";\n    reset.textContent = \"Reset\" + cols_str;\n    $(reset).on(\"click\", { el: $tileSideTools }, function (e) {\n        e.preventDefault();\n\n        e.data.el\n            .parent()\n            .parent()\n            .removeClass(\n                \"col-1 col-2 col-3 col-4 col-5 col-6 col-7 col-8 col-9 col-10 col-11 col-12\",\n            )\n            .addClass(\"col\");\n\n        e.data.el.parent().parent().parent().mosaicSetResizeHandles();\n\n        $(e.target).parent().remove();\n    });\n    return reset;\n};\n\n/**\n * Get a list of percentage steps for each column in the grid\n *\n * @id GetGridPercentList\n * @return {Array} List of percent steps of the width class\n */\nfunction GetGridPercentList() {\n    var low = 0,\n        high = 100,\n        grid = 12,\n        grid_percent = [];\n    var step = 100 / grid;\n    var a = low,\n        b = high - 1; /* fix the last step in the loop: -1 */\n    while (a < b) {\n        grid_percent.push(Math.round((a += step)));\n    }\n\n    return grid_percent;\n}\n\n/**\n * Get the name of the width class of the given integer\n *\n * @id GetWidthClassByColSize\n * @param {Integer} col_size Bootstrap col width id\n * @return {String} Classname of the width class of the given integer\n */\nfunction GetWidthClassByColSize(col_size) {\n    if (col_size) {\n        return \"col-\" + col_size;\n    }\n\n    // Fallback\n    return \"col\";\n}\n\n/**\n * Get the name of the position class of the given integer\n *\n * @id GetColSizeByColClass\n * @param {String} Classname of the position class\n * @return {Integer} col_size Bootstrap col width id\n */\nfunction GetColSizeByColClass(col_class, prefix) {\n    prefix = prefix || \"col-\";\n    return parseInt(col_class.replace(prefix, \"\")) || 0;\n}\n\n/**\n * Get the bootstrap col width id by width size\n *\n * @id GetBootstrapColByPercent\n * @param {Integer} width Percentage of the column position\n * @return {Integer} Bootstrap col width id of the given integer\n */\nfunction GetBootstrapColByPercent(width) {\n    var grid_percent = GetGridPercentList();\n\n    for (let idx = 0; idx < grid_percent.length; idx++) {\n        if (width === grid_percent[idx]) {\n            return idx + 1;\n        }\n    }\n\n    // Fallback\n    return 12;\n}\n"],"names":["log","logging","getLogger","LayoutManager","constructor","mosaic","this","layout","widthClasses","resizeClasses","resizeHandleClasses","getWidthClass","e","cls","$","hasClass","getResizeHandleClassId","idx","length","addAppTile","type","url","success","async","value","getDomTreeFromHtml","addHeadTags","addTile","find","html","addAppTileHTML","response","editAppTile","self","window","parent","focus","removeHeadTags","$tile","document","attr","replace","tileUrl","panels","addClass","add_helper","createElement","classList","add","innerHTML","append","debug","helper","width","each","tile","Tile","initialize","cacheHtml","scanRegistry","getDefaultValue","tile_config","start","end","name","tile_type","widget","id","val","label","default_value","getPageContent","exportLayout","content","getLayoutRow","obj","body","classNames","children","data","getHtmlBody","options","saveLayoutToForm","$customLayout","hasContentLayout","init_events","events","add_event_listener","_document","keyCode","querySelectorAll","forEach","blur","focused_tile","activeElement","closest","removeClass","date","Date","getTime","original_tile","contains","$orig_row","remove","mosaicCleanupRow","trigger","parents","enabled","elm","target","srcElement","new_tile","mosaicHandleDragEnd","el","toolbar","SelectedTileChange","DocumentMousemove","offset","css","pageY","top","pageX","left","cur_snap_offset","row","resize_handle_index","mouse_x","parseFloat","mouse_percentage","Math","round","snap","snap_offset","GetGridPercentList","perc","abs","snap_size","grid_percent","GetBootstrapColByPercent","column_sizes","col_size_before","col_size_after","i","col_size","col_size_max","col_size_sum","set_resize_handler","resize_css_classes","join","width_css_classes","index","col_size_class","GetWidthClassByColSize","panel","first","$tileSideTools","AddResetAnchor","mosaicSetResizeHandles","select","TileMousemove","dir","mosaicGetDirection","divider","filter","height","CustomCSSOnDblClick","custom_classes","split","undefined","push","input","div","gridrow","base_css","initialize_panels","initJQueryHelpers","total","mosaicAddDrag","mosaicAddEmptyRows","j","eq","mosaicAddMouseMoveInnergridRow","that","pos","mosaic_doc","mosaicAddMouseMoveEmptyRow","on","before","nextAll","after","DragMove","event","DragStop","off","downX","downY","DragCheckMove","max","originaltile","clone","drop","_dir","original_row","fixup_classes","_t","_col","_row","prev_elms","prevAll","get","reverse","next_elms","mosaicSetColumnSizes","initializeContent","$gridCells","nr_of_columns","floor","col_size_last","grid_cells","zero_count","col_sum","GetColSizeByColClass","zero_col","resize_col_size","$currRow","$mosaicGridCellChildren","placeholder","del_row","next","prev","x","y","halfwidth","halfheight","cols","reset","cols_str","href","textContent","preventDefault","a","high","col_class","prefix","parseInt"],"sourceRoot":""}